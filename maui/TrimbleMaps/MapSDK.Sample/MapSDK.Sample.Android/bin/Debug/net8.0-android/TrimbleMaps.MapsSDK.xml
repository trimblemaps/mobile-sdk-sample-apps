<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TrimbleMaps.MapsSDK</name>
    </assembly>
    <members>
        <member name="P:TrimbleMaps.MapsSDK.IconImageSource.IsTemplate">
            <summary>
            The flag indicating image is an SDF or template image
            </summary>
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteral`1">
            ExpressionLiteral wraps an object to be used as a literal in an expression.
            <p>
            ExpressionLiteral is created with {@link #Literal(double)}, {@link #Literal(bool)},
            {@link #Literal(string)} and {@link #Literal(object)}.
            </p>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteral`1.ToValue">
             Get the literal object.
            
             @return the literal object
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteral`1.ToString">
             Returns a string representation of the expression literal.
            
             @return a string representation of the object.
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteral`1.GetHashCode">
             Returns a hash code value for the expression literal.
            
             @return a hash code value for this expression literal
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.Interpolator">
            Expression interpolator type.
            <p>
            Is used for first parameter of {@link #interpolate(Interpolator, Expression, params Stop[])}.
            </p>
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.Stop">
            Expression stop type.
            <p>
            Can be used for {@link #stop(object, object)} as part of varargs parameter in
            {@link #step(double, Expression, params Stop[])} or {@link #interpolate(Interpolator, Expression, params Stop[])}.
            </p>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Stop.ToExpressionArray(TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Converts a varargs of Stops to a Expression array.
            
             @param stops the stops to convert
             @return the converted stops as an expression array
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.FormatEntry">
            Holds format entries used in a {@link #Format(FormatEntry...)} expression.
        </member>
        <!-- Badly formed XML comment ignored for member "T:TrimbleMaps.MapsSDK.Expressions.FormatOption" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatFontScale(TrimbleMaps.MapsSDK.Expressions.Expression)" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatFontScale(System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatTextFont(TrimbleMaps.MapsSDK.Expressions.Expression)" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatTextFont(System.String[])" -->
        <member name="M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatTextColor(TrimbleMaps.MapsSDK.Expressions.Expression)">
             If set, the text-color argument overrides the color specified by the root paint properties.
            
             @param expression expression
             @return format option
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.FormatOption.FormatTextColor(Microsoft.Maui.Graphics.Color)">
             If set, the text-color argument overrides the color specified by the root paint properties.
            
             @param color value
             @return format option
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteralArray`1">
            Expression to wrap object[] as a literal
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteralArray`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
             Create an expression literal.
            
             @param object the object to be treated as literal
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.ExpressionLiteralArray`1.ToString">
             Convert the expression array to a string representation.
            
             @return the string representation of the expression array
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.ExpressionMap">
            Wraps an expression value stored in a Map.
        </member>
        <member name="T:TrimbleMaps.MapsSDK.Expressions.IValueExpression">
            Interface used to describe expressions that hold a Java value.
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.#ctor">
            Creates an empty expression for expression literals
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.#ctor(System.String,TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Creates an expression from its @operator and varargs expressions.
            
             @param @operator  the expression @operator
             @param arguments expressions input
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Literal``1(``0)">
             Create a literal number expression.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Literal(10.0f))
             );
             }
             </pre>
            
             @param number the number
             @return the expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Literal``1(System.Collections.Generic.IEnumerable{``0})">
             Create a literal array expression
            
             @param array the array
             @return the expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Color(Microsoft.Maui.Graphics.Color)">
             Expression literal utility method to convert a color int to an color expression
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(Color(Color.GREEN))
             );
             }
             </pre>
            
             @param color the int color
             @return the color expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Rgb(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Creates a color value from red, green, and blue components, which must range between 0 and 255,
             and an alpha component of 1.
             <p>
             If any component is out of range, the expression is an error.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                     rgb(
                         Literal(255.0f),
                         Literal(255.0f),
                         Literal(255.0f)
                     )
                 )
             );
             }
             </pre>
            
             @param red   red color expression
             @param green green color expression
             @param blue  blue color expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-rgb">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Rgb(System.Int32,System.Int32,System.Int32)">
             Creates a color value from red, green, and blue components, which must range between 0 and 255,
             and an alpha component of 1.
             <p>
             If any component is out of range, the expression is an error.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                     rgb(255.0f, 255.0f, 255.0f)
                 )
             );
             }
             </pre>
            
             @param red   red color value
             @param green green color value
             @param blue  blue color value
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-rgb">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Rgba(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Creates a color value from red, green, blue components, which must range between 0 and 255,
             and an alpha component which must range between 0 and 1.
             <p>
             If any component is out of range, the expression is an error.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                     rgba(
                         Literal(255.0f),
                         Literal(255.0f),
                         Literal(255.0f),
                         Literal(1.0f)
                     )
                 )
             );
             }
             </pre>
            
             @param red   red color value
             @param green green color value
             @param blue  blue color value
             @param alpha alpha color value
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-rgba">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Rgba(System.Double,System.Double,System.Double,System.Double)">
             Creates a color value from red, green, blue components, which must range between 0 and 255,
             and an alpha component which must range between 0 and 1.
             <p>
             If any component is out of range, the expression is an error.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                     rgba(255.0f, 255.0f, 255.0f, 1.0f)
                 )
             );
             }
             </pre>
            
             @param red   red color value
             @param green green color value
             @param blue  blue color value
             @param alpha alpha color value
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-rgba">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToRgba(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns a four-element array containing the input color's red, green, blue, and alpha components, in that order.
            
             @param expression an expression to convert to a color
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-to-rgba">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,System.Boolean)">
             Returns true if the input values are equal, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), true)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second bool
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns true if the input values are equal, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Eq(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns true if the input values are equal, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Eq(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-==">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are not equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are not equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,System.Boolean)">
             Returns true if the input values are equal, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), true)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second bool
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns `true` if the input values are not equal, `false` otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input values are not equal, false otherwise.
             The inputs must be numbers, strings, or booleans, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Neq(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns `true` if the input values are not equal, `false` otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!=">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gt(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly greater than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Gt(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gt(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly greater than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Gt(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gt(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns true if the first input is strictly greater than the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Gt(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gt(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns true if the first input is strictly greater than the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Gt(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gt(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly greater than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Gt(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lt(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly less than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lt(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lt(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly less than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lt(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lt(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns true if the first input is strictly less than the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lt(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lt(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns true if the first input is strictly less than the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lt(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lt(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is strictly less than the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lt(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gte(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is greater than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 gte(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gte(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is greater than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 gte(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gte(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns true if the first input is greater than or equal to the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 gte(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gte(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns true if the first input is greater than or equal to the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Neq(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Gte(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is greater than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 gte(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3E%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lte(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is less than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lte(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lte(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is less than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lte(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second expression
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lte(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double)">
             Returns true if the first input is less than or equal to the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lte(get("keyToValue"), 2.0f)
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lte(TrimbleMaps.MapsSDK.Expressions.Expression,System.String)">
             Returns true if the first input is less than or equal to the second, false otherwise.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lte(get("keyToValue"), "value")
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Lte(TrimbleMaps.MapsSDK.Expressions.Expression,System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the first input is less than or equal to the second, false otherwise.
             The inputs must be numbers or strings, and both of the same type.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Lte(get("keyToValue"), Get("keyToOtherValue"), Collator(true, false))
             );
             }
             </pre>
            
             @param compareOne the first expression
             @param compareTwo the second string
             @param collator   the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%3C%3D">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.All(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns `true` if all the inputs are `true`, `false` otherwise.
             <p>
             The inputs are evaluated in order, and evaluation is short-circuiting:
             once an input expression evaluates to `false`,
             the result is `false` and no further input expressions are evaluated.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 all(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-all">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Any(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns `true` if any of the inputs are `true`, `false` otherwise.
             <p>
             The inputs are evaluated in order, and evaluation is short-circuiting:
             once an input expression evaluates to `true`,
             the result is `true` and no further input expressions are evaluated.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Any(get("keyToValue"), Get("keyToOtherValue"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-any">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Not(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Logical negation. Returns `true` if the input is `false`, and `false` if the input is `true`.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Not(get("keyToValue"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Not(System.Boolean)">
             Logical negation. Returns `true` if the input is `false`, and `false` if the input is `true`.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Not(false)
             );
             }
             </pre>
            
             @param input bool input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-!">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.SwitchCase(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Selects the first output whose corresponding test condition evaluates to true.
             <p>
             For each case a condition and an output should be provided.
             The last parameter should provide the default output.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 iconSize(
                     SwitchCase(
                         Get(KEY_TO_BOOLEAN), Literal(3.0f),
                         Get(KEY_TO_OTHER_BOOLEAN), Literal(5.0f),
                         Literal(1.0f) // default value
                     )
                 )
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-case">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Match(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Selects the output whose label value matches the input value, or the fallback value if no match is found.
             The `input` can be any string or number expression.
             Each label can either be a single literal value or an array of values.
             If types of the input and keys don't match, or the input value doesn't exist,
             the expresion will fail without falling back to the default value.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textColor(
                     Match(get("keyToValue"),
                         Literal(1), rgba(255, 0, 0, 1.0f),
                         Literal(2), rgba(0, 0, 255.0f, 1.0f),
                         rgba(0.0f, 255.0f, 0.0f, 1.0f)
                     )
                 )
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-match">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Match(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Selects the output whose label value matches the input value, or the fallback value if no match is found.
             The `input` can be any string or number expression.
             Each label can either be a single literal value or an array of values.
             If types of the input and keys don't match, or the input value doesn't exist,
             the expresion will fail without falling back to the default value.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
               textColor(
                 Match(get("keyToValue"), rgba(0.0f, 255.0f, 0.0f, 1.0f),
                   stop(1f, rgba(255, 0, 0, 1.0f)),
                   stop(2f, rgba(0, 0, 255.0f, 1.0f))
                 )
               )
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-match">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Coalesce(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Evaluates each expression in turn until the first non-null value is obtained, and returns that value.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textColor(
                     Coalesce(
                         Get("keyToNullValue"),
                         Get("keyToNonNullValue")
                     )
                 )
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-coalesce">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Properties">
             Gets the feature properties object.
             <p>
             Note that in some cases, it may be more efficient to use {@link #get(Expression)}} instead.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-value", Properties()))
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-properties">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.GeometryType">
             Gets the feature's geometry type: Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Concat(get("key-to-value"), Literal(" "), geometryType()))
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-geometry-types">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Id">
             Gets the feature's id, if it has one.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(id())
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-id">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.HeatmapDensity">
             Gets the kernel density estimation of a pixel in a heatmap layer,
             which is a relative measure of how many data points are crowded around a particular pixel.
             Can only be used in the `heatmap-color` property.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             HeatmapLayer layer = new HeatmapLayer("layer-id", "source-id");
             layer.setProperties(
                 heatmapColor(interpolate(linear(), heatmapDensity(),
                     Literal(0), rgba(33, 102, 172, 0),
                     Literal(0.2), rgb(103, 169, 207),
                     Literal(0.4), rgb(209, 229, 240),
                     Literal(0.6), rgb(253, 219, 199),
                     Literal(0.8), rgb(239, 138, 98),
                     Literal(1), rgb(178, 24, 43))
                 )
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-heatmap-density">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.LineProgress">
             Gets the progress along a gradient line. Can only be used in the line-gradient property.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             LineLayer layer = new LineLayer("layer-id", "source-id");
             layer.setProperties(
                 lineGradient(interpolate(
                     linear(), lineProgress(),
                     stop(0f, rgb(0, 0, 255)),
                     stop(0.5f, rgb(0, 255, 0)),
                     stop(1f, rgb(255, 0, 0)))
                 )
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-line-progress">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.At(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Retrieves an item from an array.
            
             @param number     the index expression
             @param expression the array expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-at">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.At(System.Double,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Retrieves an item from an array.
            
             @param number     the index expression
             @param expression the array expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-at">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Get(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Retrieves a property value from the current feature's properties,
             or from another object if a second argument is provided.
             Returns null if the requested property is missing.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-feature"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-get">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Get(System.String)">
             Retrieves a property value from the current feature's properties,
             or from another object if a second argument is provided.
             Returns null if the requested property is missing.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-feature"))
             );
             }
             </pre>
            
             @param input string input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-get">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Get(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Retrieves a property value from another object.
             Returns null if the requested property is missing.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-property", Get("key-to-object")))
             );
             }
             </pre>
            
             @param key    a property value key
             @param object an expression object
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-get">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Get(System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Retrieves a property value from another object.
             Returns null if the requested property is missing.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-property", Get("key-to-object")))
             );
             }
             </pre>
            
             @param key    a property value key
             @param object an expression object
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-get">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Has(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Tests for the presence of an property value in the current feature's properties.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Has(get("keyToValue"))
             );
             }
             </pre>
            
             @param key the expression property value key
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-has">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Has(System.String)">
             Tests for the presence of an property value in the current feature's properties.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Has("keyToValue")
             );
             }
             </pre>
            
             @param key the property value key
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-has">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Has(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Tests for the presence of an property value from another object.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Has(get("keyToValue"), Get("keyToObject"))
             );
             }
             </pre>
            
             @param key    the expression property value key
             @param object an expression object
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-has">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Has(System.String,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Tests for the presence of an property value from another object.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setFilter(
                 Has("keyToValue", Get("keyToObject"))
             );
             }
             </pre>
            
             @param key    the property value key
             @param object an expression object
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-has">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Length(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Gets the length of an array or string.
            
             @param expression an expression object or expression string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-lenght">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Length(System.String)">
             Gets the length of an array or string.
            
             @param input a string
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-lenght">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Ln2">
             Returns mathematical constant Ln(2).
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(product(Literal(10.0f), Ln2()))
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-ln2">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Pi">
             Returns the mathematical constant pi.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(product(Literal(10.0f), pi()))
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-pi">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.E">
             Returns the mathematical constant e.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(product(Literal(10.0f), e()))
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-e">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sum(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns the sum of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(sum(Literal(10.0f), Ln2(), pi()))
             );
             }
             </pre>
            
             @param numbers the numbers to calculate the sum for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-+">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sum(System.Double[])">
             Returns the sum of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(sum(10.0f, 5.0f, 3.0f))
             );
             }
             </pre>
            
             @param numbers the numbers to calculate the sum for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-+">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Product(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns the product of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(product(Literal(10.0f), Ln2()))
             );
             }
             </pre>
            
             @param numbers the numbers to calculate the product for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-*">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Product(System.Double[])">
             Returns the product of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(product(10.0f, 2.0f))
             );
             }
             </pre>
            
             @param numbers the numbers to calculate the product for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-*">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Subtract(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the result of subtracting a number from 0.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Subtract(pi()))
             );
             }
             </pre>
            
             @param number the number subtract from 0
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions--">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Subtract(System.Double)">
             Returns the result of subtracting a number from 0.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Subtract(10.0f))
             );
             }
             </pre>
            
             @param number the number subtract from 0
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions--">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Subtract(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the result of subtracting the second input from the first.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Subtract(Literal(10.0f), pi()))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions--">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Subtract(System.Double,System.Double)">
             Returns the result of subtracting the second input from the first.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Subtract(10.0f, 20.0f))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions--">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Division(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the result of floating point division of the first input by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Division(Literal(10.0f), pi()))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-/">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Division(System.Double,System.Double)">
             Returns the result of floating point division of the first input by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Division(10.0f, 20.0f))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-/">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Mod(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the remainder after integer division of the first input by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Mod(Literal(10.0f), pi()))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%25">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Mod(System.Double,System.Double)">
             Returns the remainder after integer division of the first input by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Mod(10.0f, 10.0f))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%25">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Pow(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the result of raising the first input to the power specified by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(pow(pi(), Literal(2.0f)))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%5E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Pow(System.Double,System.Double)">
             Returns the result of raising the first input to the power specified by the second.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(pow(5.0f, 2.0f))
             );
             }
             </pre>
            
             @param first  the first number
             @param second the second number
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-%5E">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sqrt(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the square root of the input
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Sqrt(pi()))
             );
             }
             </pre>
            
             @param number the number to take the square root from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-sqrt">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sqrt(System.Double)">
             Returns the square root of the input
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Sqrt(25.0f))
             );
             }
             </pre>
            
             @param number the number to take the square root from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-sqrt">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Log10(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the base-ten logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Log10(pi()))
             );
             }
             </pre>
            
             @param number the number to take base-ten logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-log10">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Log10(System.Double)">
             Returns the base-ten logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Log10(10))
             );
             }
             </pre>
            
             @param number the number to take base-ten logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-log10">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Ln(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the natural logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Ln(pi()))
             );
             }
             </pre>
            
             @param number the number to take natural logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-ln">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Ln(System.Double)">
             Returns the natural logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Ln(10))
             );
             }
             </pre>
            
             @param number the number to take natural logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-ln">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Log2(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the base-two logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Log2(pi()))
             );
             }
             </pre>
            
             @param number the number to take base-two logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-log2">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Log2(System.Double)">
             Returns the base-two logarithm of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Log2(2))
             );
             }
             </pre>
            
             @param number the number to take base-two logarithm from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-log2">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sin(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the sine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Sin(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the sine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-sin">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Sin(System.Double)">
             Returns the sine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Sin(90.0f))
             );
             }
             </pre>
            
             @param number the number to calculate the sine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-sin">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Cos(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the cosine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Cos(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the cosine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-cos">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Cos(System.Double)">
             Returns the cosine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Cos(0))
             );
             }
             </pre>
            
             @param number the number to calculate the cosine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-cos">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Tan(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the tangent of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Tan(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the tangent for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-tan">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Tan(System.Double)">
             Returns the tangent of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Tan(45.0f))
             );
             }
             </pre>
            
             @param number the number to calculate the tangent for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-tan">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Asin(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the arcsine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Asin(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the arcsine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-asin">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Asin(System.Double)">
             Returns the arcsine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Asin(90))
             );
             }
             </pre>
            
             @param number the number to calculate the arcsine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-asin">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Acos(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the arccosine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Acos(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the arccosine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-acos">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Acos(System.Double)">
             Returns the arccosine of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Acos(0))
             );
             }
             </pre>
            
             @param number the number to calculate the arccosine for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-acos">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Atan(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the arctangent of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Asin(pi()))
             );
             }
             </pre>
            
             @param number the number to calculate the arctangent for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-atan">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Atan(System.Double)">
             Returns the arctangent of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Atan(90))
             );
             }
             </pre>
            
             @param number the number to calculate the arctangent for
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-atan">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Min(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns the minimum value of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Min(pi(), Literal(3.14f), Literal(3.15f)))
             );
             }
             </pre>
            
             @param numbers varargs of numbers to get the minimum from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-min">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Min(System.Double[])">
             Returns the minimum value of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Min(3.141, 3.14f, 3.15f))
             );
             }
             </pre>
            
             @param numbers varargs of numbers to get the minimum from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-min">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Max(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns the maximum value of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Max(pi(), product(pi(), pi())))
             );
             }
             </pre>
            
             @param numbers varargs of numbers to get the maximum from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-max">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Max(System.Double[])">
             Returns the maximum value of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Max(3.141, 3.14f, 3.15f))
             );
             }
             </pre>
            
             @param numbers varargs of numbers to get the maximum from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-max">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Round(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Rounds the input to the nearest integer.
             Halfway values are rounded away from zero.
             For example `[\"round\", -1.5]` evaluates to -2.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Round(pi()))
             );
             }
             </pre>
            
             @param expression number expression to round
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-round">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Round(System.Double)">
             Rounds the input to the nearest integer.
             Halfway values are rounded away from zero.
             For example `[\"round\", -1.5]` evaluates to -2.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Round(3.14159265359f))
             );
             }
             </pre>
            
             @param number number to round
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-round">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Abs(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the absolute value of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Abs(Subtract(pi())))
             );
             }
             </pre>
            
             @param expression number expression to get absolute value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Abs(System.Double)">
             Returns the absolute value of the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Abs(-3.14159265359f))
             );
             }
             </pre>
            
             @param number number to get absolute value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Ceil(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the smallest integer that is greater than or equal to the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Ceil(pi()))
             );
             }
             </pre>
            
             @param expression number expression to get value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Ceil(System.Double)">
             Returns the smallest integer that is greater than or equal to the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Ceil(3.14159265359))
             );
             }
             </pre>
            
             @param number number to get value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Floor(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the largest integer that is less than or equal to the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Floor(pi()))
             );
             }
             </pre>
            
             @param expression number expression to get value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Floor(System.Double)">
             Returns the largest integer that is less than or equal to the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(Floor(pi()))
             );
             }
             </pre>
            
             @param number number to get value from
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-abs">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ResolvedLocale(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the IETF language tag of the locale being used by the provided collator.
             This can be used to determine the default system locale,
             or to determine if a requested locale was successfully loaded.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
             circleColor(switchCase(
             Eq(Literal("it"), resolvedLocale(Collator(true, true, Locale.ITALY))), Literal(ColorUtils.colorToRgbaString
             (Color.GREEN)),
             Literal(ColorUtils.colorToRgbaString(Color.RED))))
             );
             }
             </pre>
            
             @param collator the collator expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-resolved-locale">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.IsSupportedScript(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns true if the input string is expected to render legibly.
             Returns false if the input string contains sections that cannot be rendered without potential loss of meaning
             (e.g. Indic scripts that require complex text shaping,
             or right-to-left scripts if the the MapsSDK-gl-rtl-text plugin is not in use in MapsSDK GL JS).
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             MapsSDKMap.getStyle().addLayer(new SymbolLayer("layer-id", "source-id")
               .withProperties(
                 textField(
                   SwitchCase(
                     IsSupportedScript(get("name_property")), Get("name_property"),
                     Literal("not-compatible")
                   )
                 )
               ));
             }
             </pre>
            
             @param expression the expression to evaluate
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-is-supported-script">Style
             specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.IsSupportedScript(System.String)">
             Returns true if the input string is expected to render legibly.
             Returns false if the input string contains sections that cannot be rendered without potential loss of meaning
             (e.g. Indic scripts that require complex text shaping,
             or right-to-left scripts if the the MapsSDK-gl-rtl-text plugin is not in use in MapsSDK GL JS).
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             MapsSDKMap.getStyle().addLayer(new SymbolLayer("layer-id", "source-id")
             .withProperties(
               textField(
                 SwitchCase(
                   IsSupportedScript("ಗೌರವಾರ್ಥವಾಗಿ"), Literal("ಗೌರವಾರ್ಥವಾಗಿ"),
                   Literal("not-compatible"))
                 )
               )
             );
             }
             </pre>
            
             @param string the string to evaluate
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-is-supported-script">Style
             specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Upcase(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the input string converted to uppercase.
             <p>
             Follows the Unicode Default Case Conversion algorithm
             and the locale-insensitive case mappings in the Unicode Character Database.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Upcase(get("key-to-string-value")))
             );
             }
             </pre>
            
             @param string the string to upcase
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-upcase">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Upcase(System.String)">
             Returns the input string converted to uppercase.
             <p>
             Follows the Unicode Default Case Conversion algorithm
             and the locale-insensitive case mappings in the Unicode Character Database.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Upcase("text"))
             );
             }
             </pre>
            
             @param string string to upcase
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-upcase">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Downcase(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns the input string converted to lowercase.
             <p>
             Follows the Unicode Default Case Conversion algorithm
             and the locale-insensitive case mappings in the Unicode Character Database.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Downcase(get("key-to-string-value")))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-downcase">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Downcase(System.String)">
             Returns the input string converted to lowercase.
             <p>
             Follows the Unicode Default Case Conversion algorithm
             and the locale-insensitive case mappings in the Unicode Character Database.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Upcase("key-to-string-value"))
             );
             }
             </pre>
            
             @param input string to downcase
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-downcase">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Concat(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Returns a string consisting of the concatenation of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Concat(get("key-to-string-value"), Literal("other string")))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-concat">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Concat(System.String[])">
             Returns a string consisting of the concatenation of the inputs.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(Concat("foo", "bar"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-concat">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Array(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Asserts that the input is an array (optionally with a specific item type and length).
             If, when the input expression is evaluated, it is not of the asserted type,
             then this assertion will cause the whole expression to be aborted.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-array">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.TypeOf(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns a string describing the type of the given value.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-typeof">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.String(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Asserts that the input value is a string.
             If multiple values are provided, each one is evaluated in order until a string value is obtained.
             If none of the inputs are strings, the expression is an error.
             The asserted input value is returned as result.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-string">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Number(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Asserts that the input value is a number.
             If multiple values are provided, each one is evaluated in order until a number value is obtained.
             If none of the inputs are numbers, the expression is an error.
             The asserted input value is returned as result.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-number">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Bool(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Asserts that the input value is a bool.
             If multiple values are provided, each one is evaluated in order until a bool value is obtained.
             If none of the inputs are booleans, the expression is an error.
             The asserted input value is returned as result.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-bool">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Collator(System.Boolean,System.Boolean,System.Globalization.CultureInfo)">
             Returns a collator for use in locale-dependent comparison operations.
             The case-sensitive and diacritic-sensitive options default to false.
             The locale argument specifies the IETF language tag of the locale to use.
             If none is provided, the default locale is used. If the requested locale is not available,
             the collator will use a system-defined fallback locale.
             Use resolved-locale to test the results of locale fallback behavior.
            
             @param caseSensitive      case sensitive flag
             @param diacriticSensitive diacritic sensitive flag
             @param locale             locale
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-collator">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Collator(System.Boolean,System.Boolean)">
             Returns a collator for use in locale-dependent comparison operations.
             The case-sensitive and diacritic-sensitive options default to false.
             The locale argument specifies the IETF language tag of the locale to use.
             If none is provided, the default locale is used. If the requested locale is not available,
             the collator will use a system-defined fallback locale.
             Use resolved-locale to test the results of locale fallback behavior.
            
             @param caseSensitive      case sensitive flag
             @param diacriticSensitive diacritic sensitive flag
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-collator">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Collator(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns a collator for use in locale-dependent comparison operations.
             The case-sensitive and diacritic-sensitive options default to false.
             The locale argument specifies the IETF language tag of the locale to use.
             If none is provided, the default locale is used. If the requested locale is not available,
             the collator will use a system-defined fallback locale.
             Use resolved-locale to test the results of locale fallback behavior.
            
             @param caseSensitive      case sensitive flag
             @param diacriticSensitive diacritic sensitive flag
             @param locale             locale
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-collator">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Collator(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Returns a collator for use in locale-dependent comparison operations.
             The case-sensitive and diacritic-sensitive options default to false.
             The locale argument specifies the IETF language tag of the locale to use.
             If none is provided, the default locale is used. If the requested locale is not available,
             the collator will use a system-defined fallback locale.
             Use resolved-locale to test the results of locale fallback behavior.
            
             @param caseSensitive      case sensitive flag
             @param diacriticSensitive diacritic sensitive flag
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-collator">Style specification</a>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.Format(TrimbleMaps.MapsSDK.Expressions.FormatEntry[])" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.CreateFormatEntry(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.FormatOption[])" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.CreateFormatEntry(TrimbleMaps.MapsSDK.Expressions.Expression)" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.CreateFormatEntry(System.String,TrimbleMaps.MapsSDK.Expressions.FormatOption[])" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.CreateFormatEntry(System.String)" -->
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Object(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Asserts that the input value is an object. If it is not, the expression is an error
             The asserted input value is returned as result.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-object">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToString(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Converts the input value to a string.
             If the input is null, the result is null.
             If the input is a bool, the result is true or false.
             If the input is a number, it is converted to a string by NumberToString in the ECMAScript Language Specification.
             If the input is a color, it is converted to a string of the form "rgba(r,g,b,a)",
             where `r`, `g`, and `b` are numerals ranging from 0 to 255, and `a` ranges from 0 to 1.
             Otherwise, the input is converted to a string in the format specified by the JSON.stringify in the ECMAScript
             Language Specification.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             SymbolLayer symbolLayer = new SymbolLayer("layer-id", "source-id");
             symbolLayer.setProperties(
                 textField(get("key-to-number-value"))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-to-string">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToNumber(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Converts the input value to a number, if possible.
             If the input is null or false, the result is 0.
             If the input is true, the result is 1.
             If the input is a string, it is converted to a number as specified by the ECMAScript Language Specification.
             If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained.
             If none of the inputs can be converted, the expression is an error.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(toNumber(get("key-to-string-value")))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-to-number">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToBool(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Converts the input value to a bool. The result is `false` when then input is an empty string, 0, false,
             null, or NaN; otherwise it is true.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(toBool(get("key-to-value")))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-to-bool">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToColor(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Converts the input value to a color. If multiple values are provided,
             each one is evaluated in order until the first successful conversion is obtained.
             If none of the inputs can be converted, the expression is an error.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(toColor(get("keyStringValue")))
             );
             }
             </pre>
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-types-to-color">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Let(TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Binds input to named variables,
             which can then be referenced in the result expression using {@link #var(string)} or {@link #var(Expression)}.
            
             @param input expression input
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-let">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Var(TrimbleMaps.MapsSDK.Expressions.Expression)">
             References variable bound using let.
            
             @param expression the variable naming expression that was bound with using let
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-var">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Var(System.String)">
             References variable bound using let.
            
             @param variableName the variable naming that was bound with using let
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-var">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Zoom">
             Gets the current zoom level.
             <p>
             Note that in style layout and paint properties,
             zoom may only appear as the input to a top-level step or interpolate expression.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     exponential(0.5f), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-zoom">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.CreateStop(System.Object,System.Object)">
             Produces a stop value.
             <p>
             Can be used for {@link #stop(object, object)} as part of varargs parameter in
             {@link #step(double, Expression, params Stop[])} or {@link #interpolate(Interpolator, Expression, params Stop[])}.
             </p>
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), Literal(0.0f),
                     stop(1.0f, 2.5f),
                     stop(10.0f, 5.0f))
                 )
             );
             }
             </pre>
            
             @param stop  the stop input
             @param value the stop output
             @return the stop
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(System.Double,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), Literal(0.0f),
                     Literal(1.0f), Literal(2.5f),
                     Literal(10.0f), Literal(5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), Literal(0.0f),
                     Literal(1.0f), Literal(2.5f),
                     Literal(10.0f), Literal(5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input expression
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(System.Double,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), Literal(0.0f),
                     stop(1, 2.5f),
                     stop(10, 5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), Literal(0.0f),
                     stop(1, 2.5f),
                     stop(10, 5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(System.Double,System.Double,TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(1.0f, 0.0f,
                     Literal(1.0f), Literal(2.5f),
                     Literal(10.0f), Literal(5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double,TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), 0.0f,
                     Literal(1.0f), Literal(2.5f),
                     Literal(10.0f), Literal(5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input expression
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(System.Double,System.Double,TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), 0.0f,
                     stop(1, 2.5f),
                     stop(10, 5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Step(TrimbleMaps.MapsSDK.Expressions.Expression,System.Double,TrimbleMaps.MapsSDK.Expressions.Stop[])">
             Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of
             input and output values (\"stops\"). The `input` may be any numeric expression (e.g., `[\"get\", \"population\"]`).
             Stop inputs must be numeric literals in strictly ascending order.
             Returns the output value of the stop just less than the input,
             or the first input if the input is less than the first stop.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             CircleLayer circleLayer = new CircleLayer("layer-id", "source-id");
             circleLayer.setProperties(
                 circleRadius(
                     step(zoom(), 0.0f,
                     stop(1, 2.5f),
                     stop(10, 5.0f))
                 )
             );
             }
             </pre>
            
             @param input         the input value
             @param defaultOutput the default output expression
             @param stops         pair of input and output values
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-step">Style specification</a>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.Interpolate(TrimbleMaps.MapsSDK.Expressions.Interpolator,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression[])" -->
        <!-- Badly formed XML comment ignored for member "M:TrimbleMaps.MapsSDK.Expressions.Expression.Interpolate(TrimbleMaps.MapsSDK.Expressions.Interpolator,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Stop[])" -->
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Linear">
             interpolates linearly between the pair of stops just less than and just greater than the input.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     linear(), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-interpolate">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Exponential(System.Double)">
             Interpolates exponentially between the stops just less than and just greater than the input.
             `base` controls the rate at which the output increases:
             higher values make the output increase more towards the high end of the range.
             With values close to 1 the output increases linearly.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     exponential(0.5f), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @param base value controlling the route at which the output increases
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-interpolate">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Exponential(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Interpolates exponentially between the stops just less than and just greater than the input.
             The parameter controls the rate at which the output increases:
             higher values make the output increase more towards the high end of the range.
             With values close to 1 the output increases linearly.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     exponential(get("keyToValue")), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @param expression base number expression
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-interpolate">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.CubicBezier(TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression,TrimbleMaps.MapsSDK.Expressions.Expression)">
             Interpolates using the cubic bezier curve defined by the given control points.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     cubicBezier(0.42f, 0.0f, 1.0f, 1.0f), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @param x1 x value of the first point of a cubic bezier, ranges from 0 to 1
             @param y1 y value of the first point of a cubic bezier, ranges from 0 to 1
             @param x2 x value of the second point of a cubic bezier, ranges from 0 to 1
             @param y2 y value fo the second point of a cubic bezier, ranges from 0 to 1
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-interpolate">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.CubicBezier(System.Double,System.Double,System.Double,System.Double)">
             Interpolates using the cubic bezier curve defined by the given control points.
             <p>
             Example usage:
             </p>
             <pre>
             {@code
             FillLayer fillLayer = new FillLayer("layer-id", "source-id");
             fillLayer.setProperties(
                 fillColor(
                   interpolate(
                     cubicBezier(0.42f, 0.0f, 1.0f, 1.0f), zoom(),
                     stop(1.0f, Color(Color.RED)),
                     stop(5.0f, Color(Color.BLUE)),
                     stop(10.0f, Color(Color.GREEN))
                   )
                 )
             );
             }
             </pre>
            
             @param x1 x value of the first point of a cubic bezier, ranges from 0 to 1
             @param y1 y value of the first point of a cubic bezier, ranges from 0 to 1
             @param x2 x value of the second point of a cubic bezier, ranges from 0 to 1
             @param y2 y value fo the second point of a cubic bezier, ranges from 0 to 1
             @return expression
             @see <a href="https://www.MapsSDK.com/MapsSDK-gl-js/style-spec/#expressions-interpolate">Style specification</a>
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Join(TrimbleMaps.MapsSDK.Expressions.Expression[],TrimbleMaps.MapsSDK.Expressions.Expression[])">
             Joins two expressions arrays.
             <p>
             This flattens the object array output of an expression from a nested expression hierarchy.
             </p>
            
             @param left  the left part of an expression
             @param right the right part of an expression
             @return the joined expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToArray">
             Converts the expression to object array representation.
             <p>
             The output will later be converted to a JSON object array.
             </p>
            
             @return the converted object array expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.ToString">
             Returns a string representation of the object that matches the definition set in the style specification.
             <p>
             If this expression contains a coma (,) delimited literal, like 'rgba(r, g, b, a)`,
             it will be enclosed with double quotes (").
             </p>
            
             @return a string representation of the object.
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.Equals(TrimbleMaps.MapsSDK.Expressions.Expression)">
             Indicates whether some other object is "equal to" this one.
            
             @param o the other object
             @return true if equal, false if not
        </member>
        <member name="M:TrimbleMaps.MapsSDK.Expressions.Expression.GetHashCode">
             Returns a hash code value for the expression.
            
             @return a hash code value for this expression
        </member>
        <member name="M:TrimbleMaps.MapsSDK.IMapFunctions.ToggleTrafficLayer">
            TrimbleMapsSDK does not have a seperate plugin for Buildings or Traffic, they are already built into the Maps
        </member>
        <member name="T:TrimbleMaps.MapsSDK.GeometryConstants">
            Contains constants used throughout the sdk classes.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.RADIUS_EARTH_METERS">
            The <a href='http://en.wikipedia.org/wiki/Earth_radius#Equatorial_radius'>equatorial radius</a>
            value in meters
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MIN_WRAP_LONGITUDE">
            This constant represents the lowest longitude value available to represent a wrapped geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MAX_WRAP_LONGITUDE">
            This constant represents the highest longitude value available to represent a wrapped geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MIN_LONGITUDE">
            This constant represents the lowest longitude value available to represent a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MAX_LONGITUDE">
            This constant represents the highest longitude value available to represent a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MIN_LATITUDE">
            This constant represents the lowest latitude value available to represent a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.LATITUDE_SPAN">
            This constant represents the latitude span when representing a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.LONGITUDE_SPAN">
            This constant represents the longitude span when representing a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MAX_LATITUDE">
            This constant represents the highest latitude value available to represent a geolocation.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MAX_MERCATOR_LATITUDE">
            Maximum latitude value in Mercator projection.
        </member>
        <member name="F:TrimbleMaps.MapsSDK.GeometryConstants.MIN_MERCATOR_LATITUDE">
            Minimum latitude value in Mercator projection.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.VISIBLE">
            The layer is shown.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.NONE">
            The layer is hidden.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_CAP_BUTT">
            A cap with a squared-off end which is drawn to the exact endpoint of the line.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_CAP_ROUND">
            A cap with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_CAP_SQUARE">
            A cap with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_JOIN_BEVEL">
            A join with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_JOIN_ROUND">
            A join with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_JOIN_MITER">
            A join with a sharp, angled corner which is drawn with the outer sides beyond the endpoint of the path until they meet.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_PLACEMENT_POINT">
            The label is placed at the point where the geometry is located.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_PLACEMENT_LINE">
            The label is placed along the line of the geometry. Can only be used on LineString and Polygon geometries.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_PLACEMENT_LINE_CENTER">
            The label is placed at the center of the line of the geometry. Can only be used on LineString and Polygon geometries. Note that a single feature in a vector tile may contain multiple line geometries.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_Z_ORDER_AUTO">
            If symbol sort key is set, sort based on that. Otherwise sort symbols by their y-position relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_Z_ORDER_VIEWPORT_Y">
            Symbols will be sorted by their y-position relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.SYMBOL_Z_ORDER_SOURCE">
            Symbols will be rendered in the same order as the source data with no sorting applied.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ROTATION_ALIGNMENT_MAP">
            When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_POINT}, aligns icons east-west. When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_LINE} or {@link Property#SYMBOL_PLACEMENT_LINE_CENTER}, aligns icon x-axes with the line.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ROTATION_ALIGNMENT_VIEWPORT">
            Produces icons whose x-axes are aligned with the x-axis of the viewport, regardless of the value of {@link SYMBOL_PLACEMENT}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ROTATION_ALIGNMENT_AUTO">
            When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_POINT}, this is equivalent to {@link Property#ICON_ROTATION_ALIGNMENT_VIEWPORT}. When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_LINE} or {@link Property#SYMBOL_PLACEMENT_LINE_CENTER}, this is equivalent to {@link Property#ICON_ROTATION_ALIGNMENT_MAP}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TEXT_FIT_NONE">
            The icon is displayed at its intrinsic aspect ratio.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TEXT_FIT_WIDTH">
            The icon is scaled in the x-dimension to fit the width of the text.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TEXT_FIT_HEIGHT">
            The icon is scaled in the y-dimension to fit the height of the text.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TEXT_FIT_BOTH">
            The icon is scaled in both x- and y-dimensions.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_CENTER">
            The center of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_LEFT">
            The left side of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_RIGHT">
            The right side of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_TOP">
            The top of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_BOTTOM">
            The bottom of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_TOP_LEFT">
            The top left corner of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_TOP_RIGHT">
            The top right corner of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_BOTTOM_LEFT">
            The bottom left corner of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_ANCHOR_BOTTOM_RIGHT">
            The bottom right corner of the icon is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_PITCH_ALIGNMENT_MAP">
            The icon is aligned to the plane of the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_PITCH_ALIGNMENT_VIEWPORT">
            The icon is aligned to the plane of the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_PITCH_ALIGNMENT_AUTO">
            Automatically matches the value of {@link ICON_ROTATION_ALIGNMENT}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_PITCH_ALIGNMENT_MAP">
            The text is aligned to the plane of the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_PITCH_ALIGNMENT_VIEWPORT">
            The text is aligned to the plane of the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_PITCH_ALIGNMENT_AUTO">
            Automatically matches the value of {@link TEXT_ROTATION_ALIGNMENT}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ROTATION_ALIGNMENT_MAP">
            When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_POINT}, aligns text east-west. When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_LINE} or {@link Property#SYMBOL_PLACEMENT_LINE_CENTER}, aligns text x-axes with the line.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ROTATION_ALIGNMENT_VIEWPORT">
            Produces glyphs whose x-axes are aligned with the x-axis of the viewport, regardless of the value of {@link SYMBOL_PLACEMENT}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ROTATION_ALIGNMENT_AUTO">
            When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_POINT}, this is equivalent to {@link Property#TEXT_ROTATION_ALIGNMENT_VIEWPORT}. When {@link SYMBOL_PLACEMENT} is set to {@link Property#SYMBOL_PLACEMENT_LINE} or {@link Property#SYMBOL_PLACEMENT_LINE_CENTER}, this is equivalent to {@link Property#TEXT_ROTATION_ALIGNMENT_MAP}.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_JUSTIFY_AUTO">
            The text is aligned towards the anchor position.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_JUSTIFY_LEFT">
            The text is aligned to the left.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_JUSTIFY_CENTER">
            The text is centered.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_JUSTIFY_RIGHT">
            The text is aligned to the right.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_CENTER">
            The center of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_LEFT">
            The left side of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_RIGHT">
            The right side of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_TOP">
            The top of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_BOTTOM">
            The bottom of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_TOP_LEFT">
            The top left corner of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_TOP_RIGHT">
            The top right corner of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_BOTTOM_LEFT">
            The bottom left corner of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_ANCHOR_BOTTOM_RIGHT">
            The bottom right corner of the text is placed closest to the anchor.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_TRANSFORM_NONE">
            The text is not altered.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_TRANSFORM_UPPERCASE">
            Forces all letters to be displayed in uppercase.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_TRANSFORM_LOWERCASE">
            Forces all letters to be displayed in lowercase.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.FILL_TRANSLATE_ANCHOR_MAP">
            The fill is translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.FILL_TRANSLATE_ANCHOR_VIEWPORT">
            The fill is translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_TRANSLATE_ANCHOR_MAP">
            The line is translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.LINE_TRANSLATE_ANCHOR_VIEWPORT">
            The line is translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TRANSLATE_ANCHOR_MAP">
            Icons are translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ICON_TRANSLATE_ANCHOR_VIEWPORT">
            Icons are translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_TRANSLATE_ANCHOR_MAP">
            The text is translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_TRANSLATE_ANCHOR_VIEWPORT">
            The text is translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_TRANSLATE_ANCHOR_MAP">
            The circle is translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_TRANSLATE_ANCHOR_VIEWPORT">
            The circle is translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_PITCH_SCALE_MAP">
            Circles are scaled according to their apparent distance to the camera.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_PITCH_SCALE_VIEWPORT">
            Circles are not scaled.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_PITCH_ALIGNMENT_MAP">
            The circle is aligned to the plane of the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.CIRCLE_PITCH_ALIGNMENT_VIEWPORT">
            The circle is aligned to the plane of the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.FILL_EXTRUSION_TRANSLATE_ANCHOR_MAP">
            The fill extrusion is translated relative to the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.FILL_EXTRUSION_TRANSLATE_ANCHOR_VIEWPORT">
            The fill extrusion is translated relative to the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.RASTER_RESAMPLING_LINEAR">
            (Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.RASTER_RESAMPLING_NEAREST">
            Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.HILLSHADE_ILLUMINATION_ANCHOR_MAP">
            The hillshade illumination is relative to the north direction.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.HILLSHADE_ILLUMINATION_ANCHOR_VIEWPORT">
            The hillshade illumination is relative to the top of the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ANCHOR_MAP">
            The position of the light source is aligned to the rotation of the map.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.ANCHOR_VIEWPORT">
            The position of the light source is aligned to the rotation of the viewport.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_WRITING_MODE_HORIZONTAL">
            If a text's language supports horizontal writing mode, symbols with point placement would be laid out horizontally.
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.LayerProperty.TEXT_WRITING_MODE_VERTICAL">
            If a text's language supports vertical writing mode, symbols with point placement would be laid out vertically.
        </member>
        <member name="P:TrimbleMaps.Controls.Forms.MapView.DidTapOnMapCommand">
            <summary>
            Did tap on map
            </summary>
            <returns>((Position) Tapped location,(Point) Tapped point)</returns>
        </member>
        <member name="F:TrimbleMaps.Controls.Forms.MapView.DidTapOnCalloutViewCommandProperty">
            <summary>
            MGLMapViewDelegate -mapView:tapOnCalloutForAnnotation:
            </summary>
            <returns>Annotation's id</returns>
        </member>
    </members>
</doc>
